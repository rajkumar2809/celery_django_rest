"""
Django settings for first_project project.

Generated by 'django-admin startproject' using Django 3.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
# load the .env file
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR , 'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6rptn9n)&!9c@0l-mh@wg3s)o)0jcue@e)lu$_v1f-l@zgu+ik'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
# ALLOWED_HOSTS = [str(os.getenv('HOSTN'))]



# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'middleapp',
    'django_celery_results',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'first_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'first_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'

# below is the static database setting for production
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'ortpsa_result',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#     #    'HOST': '127.0.0.1',
#     #    'PORT': '5432',
#    },
#     'secondary': {
#         'ENGINE': 'djongo',
#         'NAME': 'eappeal_bse',
#         'CLIENT': {
#            'host': "mongodb://staging.secuodsoft.com",
#             'port': 27666
#         }

#      }
# }


# # #local db
# DATABASES = {
#        'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     },
#     'secondary': {
#         'ENGINE': 'djongo',
#         'NAME': 'eappeal_bse',
#         # 'CLIENT': {
#         #    'host': "mongodb://staging.secuodsoft.com",
#         #     'port': 27666
#         # }

#      }
# }


# # Below is the dynamic database settings
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql',
       'NAME': str(os.getenv('POST_G_DB')),
       'USER': str(os.getenv('POST_G_USER')),
       'PASSWORD': str(os.getenv('POST_G_PASSWORD')),
    #    'HOST': str(os.getenv('POST_G_IP')),
    #    'PORT': str(os.getenv('POST_G_PORT')),
   },
    'secondary': {
        'ENGINE': 'djongo',
        'NAME':  str(os.getenv('MNG_DB')),
        'CLIENT': {
           'host': str(os.getenv('MNG_IP')),
            'port': str(os.getenv('MNG_PORT'))
        }

     }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True




# to add logs

LOGGING ={
    'version': 1,
    'disable_existing_loggers': False,

    'formatters':{
        'main_formatter':{
            'format': "{asctime} - {levelname} - {message} ",
            "style": "{",
        }
    },
    'handlers':{
        'console':{
            'class': "logging.StreamHandler",
            'formatter':'main_formatter',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': 'info.log',
            'formatter': 'main_formatter',
        },
    },
    'loggers': {
        'main':{
          'handlers': ['file', 'console'],
          'propagate': True,
          'level': "INFO",
        },
    },
}
#log end

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
